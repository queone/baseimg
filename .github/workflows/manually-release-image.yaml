name: Manually Release Image

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Specify the new tag (leave empty for auto-increment)"
        required: false
        type: string

permissions:
  contents: write
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure we fetch all tags

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine new version
        id: versioning
        run: |
          # Fetch latest tags from GitHub
          git fetch --tags

          # Use manually provided tag if given
          if [[ -n "${{ github.event.inputs.tag_name }}" ]]; then
            NEW_TAG="${{ github.event.inputs.tag_name }}"
          else
            # Get latest tag, ignoring non-semver tags
            LATEST_TAG=$(git tag --sort=-v:refname | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | head -n1)

            if [[ -z "$LATEST_TAG" ]]; then
              NEW_TAG="1.0.0"
            else
              IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_TAG"
              PATCH=$((PATCH + 1))
              NEW_TAG="$MAJOR.$MINOR.$PATCH"
            fi
          fi

          echo "Latest tag: $LATEST_TAG"
          echo "New tag: $NEW_TAG"
          echo "TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Apply new Git tag
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag ${{ env.TAG }}
          git push origin ${{ env.TAG }}

      - name: Build the Docker image with new tag
        run: |
          docker build -t ghcr.io/queone/cntimage:${{ env.TAG }} -t ghcr.io/queone/cntimage:latest .

      - name: Push the Docker images
        run: |
          docker push ghcr.io/queone/cntimage:${{ env.TAG }}
          docker push ghcr.io/queone/cntimage:latest

      - name: Create GitHub Release with new tag
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/queone/cntimage/releases" \
            -d "{\"tag_name\": \"${{ env.TAG }}\", \"name\": \"Release ${{ env.TAG }}\", \"body\": \"Auto-generated release for version ${{ env.TAG }}\", \"draft\": false, \"prerelease\": false}"

      # - name: Remove package and all images
      #   run: .github/scripts/remove-pkg-image.sh ubi9
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

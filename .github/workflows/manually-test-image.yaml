name: Manually Test Image

on:
  workflow_dispatch:

jobs:
  test-image:    
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.versioning.outputs.LATEST_TAG }}  # Expose tag to next job
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure all tags are fetched
          ref: main

      - name: Get latest tag
        id: versioning
        run: |
          git fetch --tags
          LATEST_TAG=$(git tag --sort=-v:refname | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | head -n1)
          
          if [[ -z "$LATEST_TAG" ]]; then
            echo "No tags found, using default 1.0.0"
            LATEST_TAG="1.0.0"
          fi
          
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT

  test-container:
    runs-on: ubuntu-latest
    needs: test-image
    container:
      image: ghcr.io/queone/cntimage:${{ needs.test-image.outputs.latest_tag }}

    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4'

      - name: Test commands
        run: |
          set -e  # Fail if any command fails
          chmod +x /bin/sh || true  # Ensure shell is executable
          Gre='\e[1;32m' Red='\e[1;31m' Pur='\e[1;35m' Yel='\e[1;33m' Blu='\e[1;34m' Rst='\e[0m'
          printf "${Gre}START${Rst}\n"
          git --version || echo "git not found"
          ls -l
          cat /etc/os-release
          uname -m
          go version || echo "go not found"
          vault version || echo "vault not found"
          printf "${Red}END!${Rst}\n"

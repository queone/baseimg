name: Build Image

on:
  workflow_dispatch:
    inputs:
      dockerfile:
        description: "Select the Dockerfile to use"
        required: true
        type: choice
        options:
          - Dockerfile.base
          - Dockerfile.vault

permissions:
  contents: write # Required to trigger repository dispatch
  packages: write # Required to delete images from GitHub Container Registry

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure we fetch all branches

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image name and tag from Dockerfile
        run: |
          read IMAGE_NAME IMAGE_TAG < <(.github/scripts/get-name-and-tag.sh ${{ github.event.inputs.dockerfile }})
          printf "IMAGE_NAME=$IMAGE_NAME\n" >> $GITHUB_OUTPUT
          printf "IMAGE_TAG=$IMAGE_TAG\n" >> $GITHUB_OUTPUT
          # DEBUG OUTPUT
          printf "==> IMAGE_NAME = ${Blu}$IMAGE_NAME${Rst}\n"
          printf "==> IMAGE_TAG  = ${Blu}$IMAGE_TAG${Rst}\n"

      - name: Build the Docker image
        run: |
          SOURCE_REPO="https://github.com/${{ github.repository }}"
          CREATED_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          BuildCommand="docker buildx build \
            -f ${{ github.event.inputs.dockerfile }} \
            --label \"org.opencontainers.image.source=${SOURCE_REPO}\" \
            --label \"org.opencontainers.image.created=${CREATED_DATE}\" \
            -t ghcr.io/queone/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            -t ghcr.io/queone/${{ env.IMAGE_NAME }}:latest \
            --push ."
          printf "==> ${Blu}$BuildCommand${Rst}\n"
          $BuildCommand

      - name: Push the Docker image
        run: |
          docker push ghcr.io/queone/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker push ghcr.io/queone/${{ env.IMAGE_NAME }}:latest

      - name: Trigger Test Image Workflow
        if: success()  # Only trigger if the build was successful
        uses: peter-evans/repository-dispatch@v1
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: test-image
          client-payload: |
            {
              "image_name": "${{ env.IMAGE_NAME }}",
              "image_tag": "${{ env.IMAGE_TAG }}"
            }

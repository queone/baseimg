name: Test Image

on:
  workflow_run:
    workflows: ["Build Image"]  # Name of the workflow you want to depend on
    types:
      - completed
  workflow_dispatch:
    inputs:
      image_url_path:
        description: "Specify the full image URL path"
        required: true
        type: choice
        options:
          - ghcr.io/queone/quebase
          - ghcr.io/queone/quevault
      image_tag:
        description: "Specify the tag to test (e.g., 1.0.3)"
        required: true
        type: string

permissions:
  contents: read  # Required to checkout private repo
  packages: read  # Required to pull private container images from GHCR

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      image_url_path: ${{ steps.set-env.outputs.image_url_path }}
      image_tag: ${{ steps.set-env.outputs.image_tag }}
    steps:
      - name: Set up environment variables
        id: set-env
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            # Use manual input values
            echo "image_url_path=${{ github.event.inputs.image_url_path }}" >> $GITHUB_OUTPUT
            echo "image_tag=${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT
          else
            # Use values passed from another caller workflow
            echo "image_url_path=ghcr.io/queone/${{ github.event.workflow_run.inputs.image_name }}" >> $GITHUB_OUTPUT
            echo "image_tag=${{ github.event.workflow_run.inputs.image_tag }}" >> $GITHUB_OUTPUT
          fi

  test-container:
    runs-on: ubuntu-latest
    needs: set-env
    container:
      image: ${{ needs.set-env.outputs.image_url_path }}:${{ needs.set-env.outputs.image_tag }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:

      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4'

      - name: Test commands
        run: |
          Gre='\e[1;32m' Red='\e[1;31m' Mag='\e[1;35m' Yel='\e[1;33m' Blu='\e[1;34m' Rst='\e[0m'
          printf "==> ${Gre}START${Rst}\n"
          printf "==> Testing image: ${Blu}${{ needs.set-env.outputs.image_url_path }}:${{ needs.set-env.outputs.image_tag }}${Rst}\n"
          printf "==> ${Blu}git --version${Rst}\n"
          git --version || echo "git not found"
          printf "==> ${Blu}ls -l .${Rst}\n"
          ls -l .
          printf "==> ${Blu}cat /etc/os-release${Rst}\n"
          cat /etc/os-release
          printf "==> ${Blu}uname -m${Rst}\n"
          uname -m
          printf "==> ${Blu}go version${Rst}\n"
          go version || echo "go not found"
          printf "==> ${Blu}vault version${Rst}\n"
          /usr/bin/vault version || echo "/usr/bin/vault not found"
          printf "==> ${Red}END${Rst}\n"

name: Test Image

on:
  workflow_dispatch:
    inputs:
      dockerfile:
        description: "Select the Dockerfile to use"
        required: true
        type: choice
        options:
          - Dockerfile.base
          - Dockerfile.vault

jobs:
  extract-info:
    # This job retrieves the image_name and image_version from the Dockerfile
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.extract.outputs.image_name }}
      test_tag: ${{ steps.extract.outputs.image_version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Extract image name and version from Dockerfile
        id: extract
        run: |
          read IMAGE_NAME IMAGE_VERSION < <(.github/scripts/get-name-and-version.sh ${{ github.event.inputs.dockerfile }})
          echo "Extracted image name: $IMAGE_NAME, version: $IMAGE_VERSION"  # Debugging log
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "image_version=$IMAGE_VERSION" >> $GITHUB_OUTPUT

  test-container:
    # This job runs the container and executes tests
    runs-on: ubuntu-latest
    needs: extract-info
    container:
      image: ghcr.io/queone/${{ needs.extract-info.outputs.image_name }}:${{ needs.extract-info.outputs.test_tag }}

    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4'

      - name: Test COMMANDS
        run: |
          set -e
          chmod +x /bin/sh || true
          Gre='\e[1;32m' Red='\e[1;31m' Pur='\e[1;35m' Yel='\e[1;33m' Blu='\e[1;34m' Rst='\e[0m'
          printf "${Gre}START${Rst}\n"
          git --version || echo "git not found"
          ls -l
          cat /etc/os-release
          uname -m
          go version || echo "go not found"
          vault version || echo "vault not found"
          printf "${Red}END!${Rst}\n"
